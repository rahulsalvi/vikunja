name: Create release and package

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release-and-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 10
          fetch-tags: true
      - name: Calver
        uses: energostack/calver-action@v1
        id: calver
        with:
          date_format: "%Y.%-m"
      - name: Create release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Version ${{ steps.calver.outputs.next_version }}"
          tag: "${{ steps.calver.outputs.next_version }}"
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},value=${{ steps.calver.outputs.next_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.calver.outputs.next_version }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
